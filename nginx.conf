
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    access_log off;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers X-Requested-With;
    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;

    map $http_user_agent $is_desktop {
            default 0;
            ~*linux.*android|windows\s+(?:ce|phone) 0; # exceptions to the rule
            ~*spider|crawl|slurp|bot 1; # bots
            ~*windows|linux|os\s+x\s*[\d\._]+|solaris|bsd 1; # OSes
    }

    map $is_desktop $web_path {
            1 "http://127.0.0.1:7012";
            0 "http://127.0.0.1:7013";
    }

    server {
            listen       80;
            server_name  localhost;

            location / {
                root   /var/www/html;
                index  index.html index.htm;
                try_files $uri $uri/ /index.html;
            }

            	location /xxx/ {
                        proxy_pass http://xxx:8080;
                        proxy_set_header X-real-ip $remote_addr;
                        proxy_set_header Host $http_host;
            	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            	    proxy_set_header Cookie $http_cookie;
                    }

            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   html_toilet;
            }
        }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
